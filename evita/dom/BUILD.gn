# Copyright 2015 Project Vogue. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//evita/build/js_module.gni")
import("//evita/dom/idl_files.gni")
import("//evita/dom/js_files.gni")
import("//testing/test.gni")
import("//tools/grit/grit_rule.gni")

source_set("dom") {
  sources = [
    "script_thread.cc",
    "script_thread.h",
  ]
  deps = [
    ":core",
    "//base",
    "//evita/base",
    "//evita/dom/scheduler",
    "//evita/ui",
  ]
}

grit("resources") {
  source = "dom_resources.grd"
  resource_ids = "//evita/res/resource_ids"
  outputs = [
    "dom_resources.pak",
    "grit/dom_resources.h",
  ]
  grit_flags = [
    "-E",
    "target_out_dir=" + rebase_path(target_out_dir),
  ]
  deps = [
    ":global_module",
    "//evita/dom/components",
  ]
}

source_set("core") {
  visibility = [ ":*" ]
  sources = [
    "$target_gen_dir/v8_strings.cc",
    "css/text_style.cc",
    "css/text_style.h",
    "editor.cc",
    "editor.h",
    "file_path.cc",
    "file_path.h",
    "global.cc",
    "global.h",
    "global_load_script.cc",
    "script_host.cc",
    "script_host.h",
    "timers/one_shot_timer.cc",
    "timers/one_shot_timer.h",
    "timers/repeating_timer.cc",
    "timers/repeating_timer.h",
    "timers/timer.cc",
    "timers/timer.h",
    "view_event_handler_impl.cc",
    "view_event_handler_impl.h",
  ]

  sources +=
      process_file_template(interface_idl_files + dictionary_idl_files,
                            [
                              "$bindings_gen_dir/ginx_{{source_name_part}}.cc",
                              "$bindings_gen_dir/ginx_{{source_name_part}}.h",
                            ])

  deps = [
    ":dom_v8_strings_cc",
    ":global_module",
    ":lock",
    ":resources",
    ":v8_helper",
    "//base",
    "//base:i18n",
    "//common",
    "//evita/dom/bindings",
    "//evita/dom/components/clipboard",
    "//evita/dom/components/imaging",
    "//evita/dom/components/win_registry",
    "//evita/dom/components/win_resource",
    "//evita/dom/encodings",
    "//evita/dom/forms",
    "//evita/dom/os",
    "//evita/dom/public",
    "//evita/dom/scheduler:public",
    "//evita/dom/text",
    "//evita/dom/timing",
    "//evita/dom/unicode",
    "//evita/dom/visuals",
    "//evita/dom/windows",
    "//evita/gc",
    "//evita/gfx/base",
    "//evita/regex",
    "//evita/ui/animation:public",
  ]

  include_dirs = [
    root_gen_dir,
    bindings_gen_dir,
  ]
}

source_set("lock") {
  visibility = [ ":*" ]  # Only targets in this file can depend on this.
  sources = [
    "lock.cc",
    "lock.h",
  ]
  deps = [
    "//base",
  ]
}

source_set("v8_helper") {
  visibility = [ ":*" ]  # Only targets in this file can depend on this.
  sources = [
    "converter.cc",
    "converter.h",
    "dictionary.cc",
    "dictionary.h",
    "promise_resolver.cc",
    "promise_resolver.h",
    "time_stamp.cc",
    "time_stamp.h",
  ]
  deps = [
    "//base",
    "//evita/ginx",
    "//evita/text",
  ]
}

# TODO(eval1749): We should move "global_module" to "//evita/dom/global"
js_module("global_module") {
  is_global = true
  sources = [
              "global.js",
              "goog.js",
              "closure_compiler_workaround.js",
              "enums.js",
              "events/event_enums.js",
              "strings_en_US.js",
              "unicode/unicode_enums.js",
              "windows/window_enums.js",
            ] + js_lib_files
  externs = [
    "//evita/dom/components/clipboard/clipboard_externs.js",
    "//evita/dom/os/os_externs.js",
  ]
  deps = [
    "//evita/dom/bindings:bindings_externs_js",
    "//evita/dom/components/highlights:token_state_machines",
    "//evita/dom/visuals:css_properties",
  ]
}

action("dom_v8_strings_cc") {
  visibility = [ ":*" ]  # Only targets in this file can depend on this.

  script = "make_v8_strings.py"

  inputs = [
    "v8_strings.in",
  ]

  outputs = [
    "$target_gen_dir/v8_strings.cc",
    "$target_gen_dir/v8_strings.h",
  ]

  args = [ rebase_path("$target_gen_dir/v8_strings") ] +
         rebase_path(inputs, root_build_dir)
}

test("evita_dom_tests") {
  sources = [
    "css/text_style_test.cc",
    "editor_unittest.cc",
    "errors_unittest.cc",
    "file_path_unittest.cc",
    "polyfill_unittest.cc",
    "timers/timer_test.cc",
    "view_event_handler_impl_unittest.cc",
  ]

  data = []

  deps = [
    # TODO(eval1749): We should not have "application" dependency on
    # "evita_dom_test".
    "//evita:application",
    "//evita/dom/base:test_files",
    "//evita/dom/components:test_files",
    "//evita/dom/encodings:test_files",
    "//evita/dom/events:test_files",
    "//evita/dom/forms:test_files",
    "//evita/dom/os:test_files",
    "//evita/dom/testing:test_support",
    "//evita/dom/text:test_files",
    "//evita/dom/timing:test_files",
    "//evita/dom/unicode:test_files",
    "//evita/dom/visuals:test_files",
    "//evita/dom/windows:test_files",
    "//evita/visuals/css",
    "//evita/visuals/display:public",
  ]
}
